syntax = "proto3";

package certificate;

option go_package = "gus_certificates/transport/protobuf/certificate;certificate";

import "google/api/annotations.proto";

service Certificate {
    rpc IssueCertificate(IssueCertificateReq) returns (IssueCertificateResp){
        option (google.api.http) = {
            post: "/certificate/issue"
            body: "*"
          };
    }
    rpc GetCertificateFileByID(GetCertificateFileByIDReq) returns (GetCertificateFileByIDResp){
        option (google.api.http) = {
            get: "/certificate/file/{id}"
          };
    }
    rpc GetCertificateLinkByID(GetCertificateLinkByIDReq) returns (GetCertificateLinkByIDResp){
        option (google.api.http) = {
            get: "/certificate/link/{id}"
          };
    }
    rpc AddTemplate(AddTemplateReq) returns (AddTemplateResp){
        option (google.api.http) = {
            post: "/certificate/template"
            body: "*"
          };
    }
    rpc DeleteTemplate(DeleteTemplateReq) returns (DeleteTemplateResp){
        option (google.api.http) = {
            delete: "/certificate/template/{template_name}"
          };
    }
}

message IssueCertificateReq {
    StudentMessage student = 1;
    string template_name = 2;
    CourseMessage course = 3;
}

message IssueCertificateResp {
    string id = 1;
}

message GetCertificateFileByIDReq {
    string id = 1;
}

message GetCertificateLinkByIDReq {
    string id = 1;
}

message GetCertificateFileByIDResp {
    bytes certificate = 1;
}

message GetCertificateLinkByIDResp {
    string link = 1;
}

message AddTemplateReq {
    string template_name = 1;
    bytes template = 2;
}

message DeleteTemplateReq {
    string template_name = 1;
}

message AddTemplateResp {
    Status status = 1;
}

message DeleteTemplateResp {
    Status status = 1;
}

message StudentMessage {
    string firstname = 1;
    string lastname = 2;
}

message CourseMessage {
    string course_name = 1;
    string course_type = 2;
    string hours = 3;
    string date = 4;
    repeated string mentors = 5;
}

message Status {
    int32 code = 1;
}
